#!/bin/bash

# Logging setup
logFile="/var/log/lincertman.log"
# Zones Dir
zonesDir="/etc/bind/zones"

# Set variable for the path for zone configuration after validating it exists
if [ -f "/etc/bind/named.conf.default-zones" ]; then
	dnssecPath="/etc/bind/named.conf.default-zones"
elif [ -f "/etc/bind/named.conf.views" ]; then
	dnssecPath="/etc/bind/named.conf.views"
else
	echo "This requires your configuration to exist in either named.conf.views or named.conf.default-zones! Please refer to documentation before running this script!"
	echo "$(date +"%H:%M:%S %m:%d:%Y") | Error: Invalid Bind9 Config! Script will not run!" >> $logFile
	exit 1
fi
# Add DNSSEC rules to the top of the file
dnssecConf=$(echo -e "dnssec-policy secure {
    keys {
         csk key-directory lifetime unlimited algorithm ecdsa256;
    };

    // Key timings
    dnskey-ttl PT1H;
    publish-safety PT1H;
    retire-safety PT1H;
    purge-keys P90D;

    // Signature timings
    signatures-refresh P5D;
    signatures-validity P14D;
    signatures-validity-dnskey P14D;

    // Zone parameters
    max-zone-ttl P1D;
    zone-propagation-delay PT5M;
    parent-ds-ttl P1D;
    parent-propagation-delay PT1H;
};"
)

# Place DNSSEC info on the top of the by making a tmp file
echo "$dnssecConf" > tmp
cat "$dnssecPath" >> tmp
mv tmp "$dnssecPath" 
echo "$(date +"%H:%M:%S %m:%d:%Y") | Config for DNSSEC 'secure' have been added" >> $logFile

# Modify zones to suppoprt DNSSEC using the created DNSSEC rules
sed -E -i '/file.*hints/! s/file /dnssec-policy secure;\n\tinline-signing yes;\n\tfile /' /etc/bind/named.conf.default-zones
echo "$(date +"%H:%M:%S %m:%d:%Y") | Policy added for all zones!" >> $logFile

# Alter the named.conf.options to enable DNSSEC
sed -i 's/^dnssec-validation.*/dnssec-validation auto;/' /etc/bind/named.conf.options
echo "$(date +"%H:%M:%S %m:%d:%Y") | named.conf.options has been set to allow for DNSSEC Validation!" >> $logFile
# Make sure permissions are set properly
chown -R bind:bind /etc/bind
echo "$(date +"%H:%M:%S %m:%d:%Y") | Permissions have been audited so that the bind user can take control over their directory and any files manipulated by this process" >> $logFile

# Make AppArmor not mad at me for existing
sed -i 's/\/etc\/bind\/\*\* r/\/etc\/bind\/\*\* rw/g' /etc/apparmor.d/usr.sbin.named
apparmor_parser -R /etc/apparmor.d/usr.sbin.named
service apparmor reload

# Restart/Enable Bind9
systemctl restart named
systemctl enable named
echo "$(date +"%H:%M:%S %m:%d:%Y") | The named (bind9) process has been restarted and enabled so changes can be reflected in the running service!" >> $logFile
exit 0
